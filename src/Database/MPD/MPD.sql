\c postgres 

DROP DATABASE if EXISTS app_bank;

CREATE DATABASE app_bank;

\c app_bank;


CREATE TABLE IF NOT EXISTS "Account" (
    ID SERIAL PRIMARY KEY,
    FIRST_NAME VARCHAR(200) NOT NULL,
    LAST_NAME VARCHAR(200) NOT NULL,
    BIRTHDAY DATE NOT NULL,
    BANK_BALANCE DECIMAL(15,2) NOT NULL,
    BANK_NAME VARCHAR(50) NOT NULL,
    SALARY_AMOUNT DECIMAL(15,2) NOT NULL,
    Overdraw BOOLEAN DEFAULT False
);

CREATE TABLE IF NOT EXISTS "Retreat" (
    ID SERIAL PRIMARY KEY,
    AMOUNT DECIMAL(15,2) NOT NULL,
    Date DATE ,
    id_account INT REFERENCES "Account"(id)
);

CREATE TABLE IF NOT EXISTS "Loans_bank_interest" (
    ID SERIAL PRIMARY KEY,
    LOANS DECIMAL(15,2),
    INTEREST DECIMAL(15,2),
    id_account INT REFERENCES "Account"(id)
);

CREATE TABLE IF NOT EXISTS "Other_bank" (
    ID VARCHAR(50) PRIMARY KEY,
    AMOUNT DECIMAL(15,2) NOT NULL,
    BANK_NAME VARCHAR(100) NOT NULL,
    TRANSFER_REASON VARCHAR(200),
    EFFECTIVE_DATE DATE,
    REGISTRATION_DATE DATE,
    id_account INT REFERENCES "Account"(id)
);

CREATE TABLE IF NOT EXISTS "Transaction" (
    ID INT PRIMARY KEY,
    DATE_TRANSACTION DATE,
    REFERENCE VARCHAR(50) NOT NULL,
    MOTIF VARCHAR(200),
    CREDIT DECIMAL(15,2),
    DEBIT DECIMAL(15,2),
    id_account INT REFERENCES "Account"(id)
);

CREATE TABLE IF NOT EXISTS "Category_transaction" (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(200),
    DATE DATE,
    id_transaction INT REFERENCES "Transaction"(id)
);

CREATE TABLE  IF NOT EXISTS "Transfer_money" (
     ID SERIAL PRIMARY KEY,
    CREDIT_ACCOUNT INT REFERENCES "Account"(id),
    DEBIT_ACCOUNT INT REFERENCES "Account"(id),
    AMOUNT DECIMAL(15,2) NOT NULL,
    TRANSFER_REASON VARCHAR(200),
    type VARCHAR(10) CHECK (type IN ('debit', 'credit')),
    EFFECTIVE_DATE DATE,
    REGISTRATION_DATE DATE
);
